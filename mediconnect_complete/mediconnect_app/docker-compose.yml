version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mediconnect
      POSTGRES_USER: mediconnect
      POSTGRES_PASSWORD: ${DB_PASSWORD:-securepassword}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/src/database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mediconnect"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://mediconnect:${DB_PASSWORD:-securepassword}@postgres:5432/mediconnect
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret}
      WHATSAPP_API_KEY: ${WHATSAPP_API_KEY}
      WHATSAPP_PHONE_ID: ${WHATSAPP_PHONE_ID}
      S3_BUCKET: ${S3_BUCKET}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/backend:/app
      - /app/node_modules

  web-portals:
    build:
      context: ./packages/web-portals
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NEXT_PUBLIC_WEBSOCKET_URL: ws://localhost:3000
    depends_on:
      - backend
    volumes:
      - ./packages/web-portals:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
  redis_data:
